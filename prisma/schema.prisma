generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Users {
  Id                   String             @id(map: "PK__Users__3214EC075831BAA8") @default(dbgenerated("newid()"), map: "DF__Users__Id__38996AB5") @db.UniqueIdentifier
  fullName             String             @map("FullName") @db.NVarChar(255)
  email                String             @unique(map: "UQ__Users__A9D105345C910D57") @map("Email") @db.NVarChar(255)
  phoneNumber          String?            @map("PhoneNumber") @db.NVarChar(20)
  passwordHash         String             @map("PasswordHash") @db.NVarChar(255)
  passwordSalt         String             @map("PasswordSalt") @db.NVarChar(255)
  role                 String             @default("client", map: "DF__Users__Role__398D8EEE") @map("Role") @db.NVarChar(20)
  emailConfirmed       Boolean            @default(false, map: "DF__Users__EmailConf__3A81B327") @map("EmailConfirmed")
  confirmationToken    String?            @map("ConfirmationToken") @db.UniqueIdentifier
  resetPasswordToken   String?            @map("ResetPasswordToken") @db.UniqueIdentifier
  resetPasswordExpiry  DateTime?          @map("ResetPasswordExpiry")
  lastLoginDate        DateTime?          @map("LastLoginDate")
  createdAt            DateTime           @default(dbgenerated("getutcdate()"), map: "DF__Users__CreatedAt__3B75D760") @map("CreatedAt")
  updatedAt            DateTime           @default(dbgenerated("getutcdate()"), map: "DF__Users__UpdatedAt__3C69FB99") @map("UpdatedAt")
  bids                 Bids[]
  conversations        Conversations[]
  products             Products[]         @relation("CreatorProducts")
  manufacturedProducts Products[]         @relation("ManufacturerProducts")
  loginHistory         UserLoginHistory[]
  sessions             UserSessions[]

  @@index([email], map: "IX_Users_Email")
}

model Products {
  Id             String   @id(map: "PK__Products__3214EC07A8F76AAB") @default(dbgenerated("newid()"), map: "DF__Products__Id__3F466844") @db.UniqueIdentifier
  title          String   @map("Title") @db.NVarChar(255)
  description    String?  @map("Description") @db.NVarChar(Max)
  price          Decimal? @map("Price") @db.Decimal(10, 2)
  imageUrl       String?  @map("ImageUrl") @db.NVarChar(500)
  status         String   @default("ai-generated", map: "DF__Products__Status__403A8C7D") @map("Status") @db.NVarChar(50)
  creatorId      String   @map("CreatorId") @db.UniqueIdentifier
  manufacturerId String?  @map("ManufacturerId") @db.UniqueIdentifier
  createdAt      DateTime @default(dbgenerated("getutcdate()"), map: "DF__Products__Create__412EB0B6") @map("CreatedAt")
  updatedAt      DateTime @default(dbgenerated("getutcdate()"), map: "DF__Products__Update__4222D4EF") @map("UpdatedAt")
  bids           Bids[]
  creator        Users    @relation("CreatorProducts", fields: [creatorId], references: [Id], onUpdate: NoAction, map: "FK__Products__Creato__300424B4")
  manufacturer   Users?   @relation("ManufacturerProducts", fields: [manufacturerId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Products__Manufa__30F848ED")

  @@index([creatorId], map: "IX_Products_CreatorId")
  @@index([manufacturerId], map: "IX_Products_ManufacturerId")
}

model UserSessions {
  Id        String   @id(map: "PK__UserSess__3214EC07BF2D582B") @default(dbgenerated("newid()"), map: "DF__UserSessions__Id__47DBAE45") @db.UniqueIdentifier
  userId    String   @map("UserId") @db.UniqueIdentifier
  token     String   @unique(map: "UQ__UserSess__1EB4F817DDC5B3CA") @map("Token") @db.NVarChar(255)
  expiresAt DateTime @map("ExpiresAt")
  createdAt DateTime @default(dbgenerated("getutcdate()"), map: "DF__UserSessi__Creat__48CFD27E") @map("CreatedAt")
  ipAddress String?  @map("IpAddress") @db.NVarChar(50)
  userAgent String?  @map("UserAgent") @db.NVarChar(500)
  user      Users    @relation(fields: [userId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK__UserSessi__UserI__36B12243")

  @@index([token], map: "IX_UserSessions_Token")
  @@index([userId], map: "IX_UserSessions_UserId")
}

model UserLoginHistory {
  Id            String   @id(map: "PK__UserLogi__3214EC07B949602D") @default(dbgenerated("newid()"), map: "DF__UserLoginHis__Id__4CA06362") @db.UniqueIdentifier
  userId        String   @map("UserId") @db.UniqueIdentifier
  loginDate     DateTime @default(dbgenerated("getutcdate()"), map: "DF__UserLogin__Login__4D94879B") @map("LoginDate")
  ipAddress     String?  @map("IpAddress") @db.NVarChar(50)
  userAgent     String?  @map("UserAgent") @db.NVarChar(500)
  successful    Boolean  @map("Successful")
  failureReason String?  @map("FailureReason") @db.NVarChar(255)
  user          Users    @relation(fields: [userId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK__UserLogin__UserI__3B75D760")

  @@index([userId], map: "IX_UserLoginHistory_UserId")
}

model Bids {
  Id            String   @id(map: "PK__Bids__3214EC07A41A2C1F") @default(dbgenerated("newid()"), map: "DF__Bids__Id__5165187F") @db.UniqueIdentifier
  productId     String   @map("ProductId") @db.UniqueIdentifier
  upholstererId String   @map("UpholstererId") @db.UniqueIdentifier
  amount        Decimal  @map("Amount") @db.Decimal(10, 2)
  status        String   @default("pending", map: "DF__Bids__Status__52593CB8") @map("Status") @db.NVarChar(50)
  notes         String?  @map("Notes") @db.NVarChar(Max)
  createdAt     DateTime @default(dbgenerated("getutcdate()"), map: "DF__Bids__CreatedAt__534D60F1") @map("CreatedAt")
  updatedAt     DateTime @default(dbgenerated("getutcdate()"), map: "DF__Bids__UpdatedAt__5441852A") @map("UpdatedAt")
  product       Products @relation(fields: [productId], references: [Id], onUpdate: NoAction, map: "FK__Bids__ProductId__4222D4EF")
  upholsterer   Users    @relation(fields: [upholstererId], references: [Id], onUpdate: NoAction, map: "FK__Bids__Upholstere__4316F928")

  @@index([productId], map: "IX_Bids_ProductId")
  @@index([upholstererId], map: "IX_Bids_UpholstererId")
}

model Conversations {
  Id        String     @id(map: "PK__Conversa__3214EC075FE2CB92") @default(dbgenerated("newid()"), map: "DF__Conversation__Id__59063A47") @db.UniqueIdentifier
  userId    String?    @map("UserId") @db.UniqueIdentifier
  userName  String?    @map("UserName") @db.NVarChar(255)
  userPhone String?    @map("UserPhone") @db.NVarChar(20)
  createdAt DateTime   @default(dbgenerated("getutcdate()"), map: "DF__Conversat__Creat__59FA5E80") @map("CreatedAt")
  updatedAt DateTime   @default(dbgenerated("getutcdate()"), map: "DF__Conversat__Updat__5AEE82B9") @map("UpdatedAt")
  user      Users?     @relation(fields: [userId], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK__Conversat__UserI__48CFD27E")
  messages  Messages[]
}

model Messages {
  Id             String        @id(map: "PK__Messages__3214EC075E2099BD") @default(dbgenerated("newid()"), map: "DF__Messages__Id__5EBF139D") @db.UniqueIdentifier
  conversationId String        @map("ConversationId") @db.UniqueIdentifier
  content        String        @map("Content") @db.NVarChar(Max)
  isUser         Boolean       @map("IsUser")
  createdAt      DateTime      @default(dbgenerated("getutcdate()"), map: "DF__Messages__Create__5FB337D6") @map("CreatedAt")
  conversation   Conversations @relation(fields: [conversationId], references: [Id], onUpdate: NoAction, map: "FK__Messages__Conver__4D94879B")

  @@index([conversationId], map: "IX_Messages_ConversationId")
}
